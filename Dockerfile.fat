FROM scratch
# new image
ADD file:8b1e79f91081eb527b455431af58e823d8b84d9d0c8e5c47cb7bda7507954ae4 /
CMD ["bash"]

LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>
ENV NGINX_VERSION=1.21.6
ENV NJS_VERSION=0.7.2
ENV PKG_RELEASE=1~bullseye
RUN set -x && \
	addgroup --system --gid 101 nginx && \
	adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos "nginx user" --shell /bin/false --uid 101 nginx && \
	apt-get update && \
	apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates && \
	NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo "Fetching GPG key $NGINX_GPGKEY from $server";         apt-key adv --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$NGINX_GPGKEY" && \
	found=yes && \
	break;     done;     test -z "$found" && \
	echo >&2 "error: failed to fetch GPG key $NGINX_GPGKEY" && \
	exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && \
	rm -rf /var/lib/apt/lists/* && \
	dpkgArch="$(dpkg --print-architecture)" && \
	nginxPackages="         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     " && \
	case "$dpkgArch" in         amd64|arm64)             echo "deb https://nginx.org/packages/mainline/debian/ bullseye nginx" >> /etc/apt/sources.list.d/nginx.list && \
	apt-get update             ;;         *)             echo "deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx" >> /etc/apt/sources.list.d/nginx.list && \
	tempDir="$(mktemp -d)" && \
	chmod 777 "$tempDir" && \
	savedAptMark="$(apt-mark showmanual)" && \
	apt-get update && \
	apt-get build-dep -y $nginxPackages && \
	(                 cd "$tempDir" && \
	DEB_BUILD_OPTIONS="nocheck parallel=$(nproc)"                     apt-get source --compile $nginxPackages             ) && \
	apt-mark showmanual | xargs apt-mark auto > /dev/null && \
	{ [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; } && \
	ls -lAFh "$tempDir" && \
	( cd "$tempDir" && \
	dpkg-scanpackages . > Packages ) && \
	grep '^Package: ' "$tempDir/Packages" && \
	echo "deb [ trusted=yes ] file://$tempDir ./" > /etc/apt/sources.list.d/temp.list && \
	apt-get -o Acquire::GzipIndexes=false update             ;;     esac && \
	apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl && \
	apt-get remove --purge --auto-remove -y && \
	rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list && \
	if [ -n "$tempDir" ]; then         apt-get purge -y --auto-remove && \
	rm -rf "$tempDir" /etc/apt/sources.list.d/temp.list;     fi && \
	ln -sf /dev/stdout /var/log/nginx/access.log && \
	ln -sf /dev/stderr /var/log/nginx/error.log && \
	mkdir /docker-entrypoint.d
COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 /
COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da /docker-entrypoint.d
COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 /docker-entrypoint.d
COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 /docker-entrypoint.d
ENTRYPOINT ["/docker-entrypoint.sh"]

EXPOSE 80
STOPSIGNAL SIGQUIT
CMD ["nginx","-g","daemon off;"]

# end of image: nginx:latest (id:  tags: nginx:latest)
